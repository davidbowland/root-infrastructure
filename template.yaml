AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Infrastructure for dbowland.com root

Resources:
  # Permission boundaries

  RootPermissionBoundary:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      Description: Permission boundary blocking access to root resources
      ManagedPolicyName: root-boundary
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
          - Effect: Deny
            Action:
              - 'account:Accept*'
              - 'account:Close*'
              - 'account:Delete*'
              - 'account:Disable*'
              - 'account:Enable*'
              - 'account:Put*'
              - 'account:Start*'
              - 'billing:Put*'
              - 'billing:Redeem*'
              - 'billing:Update*'
              - 'payments:Create*'
              - 'payments:Delete*'
              - 'payments:Make*'
              - 'payments:Update*'
            Resource: '*'
          - Effect: Deny
            Action:
              - 'iam:DeletePolicy'
              - 'iam:DeletePolicyVersion'
              - 'iam:CreatePolicyVersion'
              - 'iam:SetDefaultPolicyVersion'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/root-boundary'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/developer-boundary'
          - Effect: Deny
            Action:
              - 'iam:DeleteUserPermissionsBoundary'
              - 'iam:DeleteRolePermissionsBoundary'
              - 'iam:PutUserPermissionsBoundary'
              - 'iam:PutRolePermissionsBoundary'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
            Condition:
              StringNotEquals:
                'iam:PermissionsBoundary': !Sub 'arn:aws:iam::${AWS::AccountId}:policy/root-boundary'
          - Effect: Deny
            Action:
              - 'iam:PutUserPolicy'
              - 'iam:PutGroupPolicy'
              - 'iam:PutRolePolicy'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:group/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
            Condition:
              ArnLike:
                'iam:PolicyARN':
                  - 'arn:aws:iam::aws:policy/IAMFullAccess'
                  - 'arn:aws:iam::aws:policy/AdministratorAccess'
          - Effect: Deny
            Action:
              - 'cloudformation:*'
            Resource: !Sub 'arn:aws:cloudformation:us-east-1:${AWS::AccountId}:stack/root-infrastructure/*'
          - Effect: Deny
            NotAction:
              - 'iam:Get*'
              - 'iam:List*'
              - 'sts:AssumeRole'
            Resource: '*'
            Condition:
              StringEquals:
                'iam:ResourceTag/created-for': 'root'

  DeveloperPermissionBoundary:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      Description: Permission boundary blocking access to administrative tasks such as user management
      ManagedPolicyName: developer-boundary
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
          - Effect: Deny
            Action:
              - 'account:Accept*'
              - 'account:Close*'
              - 'account:Delete*'
              - 'account:Disable*'
              - 'account:Enable*'
              - 'account:Put*'
              - 'account:Start*'
              - 'billing:Put*'
              - 'billing:Redeem*'
              - 'billing:Update*'
              - 'payments:Create*'
              - 'payments:Delete*'
              - 'payments:Make*'
              - 'payments:Update*'
            Resource: '*'
          - Effect: Deny
            Action:
              - 'iam:DeletePolicy'
              - 'iam:DeletePolicyVersion'
              - 'iam:CreatePolicyVersion'
              - 'iam:SetDefaultPolicyVersion'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/root-boundary'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/developer-boundary'
          - Effect: Deny
            Action:
              - 'iam:DeleteUserPermissionsBoundary'
              - 'iam:DeleteRolePermissionsBoundary'
              - 'iam:PutUserPermissionsBoundary'
              - 'iam:PutRolePermissionsBoundary'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
            Condition:
              StringNotEquals:
                'iam:PermissionsBoundary': !Sub 'arn:aws:iam::${AWS::AccountId}:policy/developer-boundary'
          - Effect: Deny
            Action:
              - 'iam:PutUserPolicy'
              - 'iam:PutGroupPolicy'
              - 'iam:PutRolePolicy'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:group/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
            Condition:
              ArnLike:
                'iam:PolicyARN':
                  - 'arn:aws:iam::aws:policy/IAMFullAccess'
                  - 'arn:aws:iam::aws:policy/AdministratorAccess'
          - Effect: Deny
            Action:
              - 'cloudformation:*'
            Resource: !Sub 'arn:aws:cloudformation:us-east-1:${AWS::AccountId}:stack/root-infrastructure/*'
          - Effect: Deny
            NotAction:
              - 'iam:Get*'
              - 'iam:List*'
              - 'sts:AssumeRole'
            Resource: '*'
            Condition:
              StringEquals:
                'iam:ResourceTag/environment': 'prod'

  # Roles

  AdminRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/david'
            Action: 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              AWS: !Sub '${AWS::AccountId}'
            Action: 'sts:AssumeRole'
      Description: Administrator role with full access
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      MaxSessionDuration: 3600
      RoleName: administrator
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'

  DeveloperRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/david'
            Action: 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              AWS: !Sub '${AWS::AccountId}'
            Action: 'sts:AssumeRole'
      Description: Non-production access
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/PowerUserAccess
      MaxSessionDuration: 3600
      PermissionsBoundary: !Ref DeveloperPermissionBoundary
      RoleName: developer
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'

  FullAccessRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/david'
            Action: 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              AWS: !Sub '${AWS::AccountId}'
            Action: 'sts:AssumeRole'
      Description: Full production access
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/PowerUserAccess
      MaxSessionDuration: 3600
      RoleName: full-access
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'

  ReadOnlyRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/david'
            Action:
              - 'sts:AssumeRole'
      Description: Read-only access to all services
      MaxSessionDuration: 3600
      RoleName: read-only
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'

  # Groups

  AdminGroup:
    Type: AWS::IAM::Group
    DeletionPolicy: Retain
    Properties:
      GroupName: Administrators

  DeveloperGroup:
    Type: AWS::IAM::Group
    DeletionPolicy: Retain
    Properties:
      GroupName: Developers

  FullAccessGroup:
    Type: AWS::IAM::Group
    DeletionPolicy: Retain
    Properties:
      GroupName: FullAccess

  # Users

  DavidUser:
    Type: AWS::IAM::User
    DeletionPolicy: Retain
    Properties:
      Groups:
        - !Ref AdminGroup
        - !Ref DeveloperGroup
        - !Ref FullAccessGroup
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: david

  InfraAdminUser:
    Type: AWS::IAM::User
    DeletionPolicy: Retain
    Properties:
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: root-admin-infra

  InfraChooseeUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: root-choosee-infra

  InfraDbdBuildMakerUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: root-dbd-build-maker-infra

  InfraDbowlandUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: root-dbowland-infra

  InfraEmailsUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: root-emails-infra

  InfraJokesUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: root-jokes-infra

  InfraLinksUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: root-links-infra

  InfraSseUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      UserName: root-sse-infra

  # Policies

  AssumeAdminGroupPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Groups:
        - !Ref AdminGroup
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'iam:Get*'
              - 'iam:List*'
            Resource: '*'
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Resource:
              - !Sub '${AdminRole.Arn}'
              - !Sub '${DeveloperRole.Arn}'
              - !Sub '${FullAccessRole.Arn}'
              - !Sub '${ReadOnlyRole.Arn}'
      PolicyName: assume-administrator-role
      Users:
        - !Ref InfraAdminUser
        - !Ref InfraChooseeUser
        - !Ref InfraDbdBuildMakerUser
        - !Ref InfraDbowlandUser
        - !Ref InfraEmailsUser
        - !Ref InfraJokesUser
        - !Ref InfraLinksUser
        - !Ref InfraSseUser

  AssumeDeveloperGroupPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Groups:
        - !Ref DeveloperGroup
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'iam:Get*'
              - 'iam:List*'
            Resource: '*'
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Resource:
              - !Sub '${DeveloperRole.Arn}'
              - !Sub '${ReadOnlyRole.Arn}'
      PolicyName: assume-developer-role

  AssumeFullAccessGroupPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Groups:
        - !Ref FullAccessGroup
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'iam:Get*'
              - 'iam:List*'
            Resource: '*'
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Resource:
              - !Sub '${DeveloperRole.Arn}'
              - !Sub '${FullAccessRole.Arn}'
              - !Sub '${ReadOnlyRole.Arn}'
      PolicyName: assume-full-access-role
      Users:
        - !Ref InfraAdminUser
        - !Ref InfraChooseeUser
        - !Ref InfraDbdBuildMakerUser
        - !Ref InfraDbowlandUser
        - !Ref InfraEmailsUser
        - !Ref InfraJokesUser
        - !Ref InfraLinksUser
        - !Ref InfraSseUser

  UploadBackupsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 's3:Describe*'
              - 's3:Get*'
              - 's3:List*'
              - 's3:PutObject'
            Resource:
              - !Sub '${BackupBucket.Arn}'
              - !Sub '${BackupBucket.Arn}/*'
      PolicyName: upload-dbowland-backups
      Users:
        - !Ref DavidUser

  # Managed Policies

  ManageOwnCredentialsPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      Description: Allow users to manage MFA and change password
      Groups:
        - !Ref AdminGroup
        - !Ref DeveloperGroup
        - !Ref FullAccessGroup
      ManagedPolicyName: manage-own-credentials
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'iam:GetAccountPasswordPolicy'
              - 'iam:ListVirtualMFADevices'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'iam:ChangePassword'
              - 'iam:GetUser'
            Resource: 'arn:aws:iam::*:user/${aws:username}'
          - Effect: Allow
            Action:
              - 'iam:CreateAccessKey'
              - 'iam:DeleteAccessKey'
              - 'iam:ListAccessKeys'
              - 'iam:UpdateAccessKey'
            Resource: 'arn:aws:iam::*:user/${aws:username}'
          - Effect: Allow
            Action:
              - 'iam:DeleteSigningCertificate'
              - 'iam:ListSigningCertificates'
              - 'iam:UpdateSigningCertificate'
              - 'iam:UploadSigningCertificate'
            Resource: 'arn:aws:iam::*:user/${aws:username}'
          - Effect: Allow
            Action:
              - 'iam:DeleteSSHPublicKey'
              - 'iam:GetSSHPublicKey'
              - 'iam:ListSSHPublicKeys'
              - 'iam:UpdateSSHPublicKey'
              - 'iam:UploadSSHPublicKey'
            Resource: 'arn:aws:iam::*:user/${aws:username}'
          - Effect: Allow
            Action:
              - 'iam:CreateServiceSpecificCredential'
              - 'iam:DeleteServiceSpecificCredential'
              - 'iam:ListServiceSpecificCredentials'
              - 'iam:ResetServiceSpecificCredential'
              - 'iam:UpdateServiceSpecificCredential'
            Resource: 'arn:aws:iam::*:user/${aws:username}'
          - Effect: Allow
            Action:
              - 'iam:CreateVirtualMFADevice'
              - 'iam:DeleteVirtualMFADevice'
            Resource: 'arn:aws:iam::*:user/${aws:username}'
          - Effect: Allow
            Action:
              - 'iam:DeactivateMFADevice'
              - 'iam:EnableMFADevice'
              - 'iam:ListMFADevices'
              - 'iam:ResyncMFADevice'
            Resource: 'arn:aws:iam::*:user/${aws:username}'

  RequireMfaPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      Description: Require MFA for login
      Groups:
        - !Ref AdminGroup
        - !Ref DeveloperGroup
        - !Ref FullAccessGroup
      ManagedPolicyName: require-mfa
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Deny
            NotAction:
              - 'iam:ChangePassword'
              - 'iam:CreateVirtualMFADevice'
              - 'iam:EnableMFADevice'
              - 'iam:GetUser'
              - 'iam:ListMFADevices'
              - 'iam:ListVirtualMFADevices'
              - 'iam:ResyncMFADevice'
              - 'sts:GetSessionToken'
            Resource: '*'
            Condition:
              BoolIfExists:
                'aws:MultiFactorAuthPresent': 'false'

  # S3

  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: false
            ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      BucketName: dbowland-backups
      LifecycleConfiguration:
        Rules:
          - AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Status: Enabled
          - NoncurrentVersionExpiration:
              NoncurrentDays: 30
            Status: Enabled
            Transitions:
              - TransitionInDays: 7
                StorageClass: GLACIER
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: 'created-by'
          Value: 'root-infrastructure'
        - Key: 'created-for'
          Value: 'root'
        - Key: 'environment'
          Value: 'prod'
      VersioningConfiguration:
        Status: Enabled
